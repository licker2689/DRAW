plugins {
    id 'java'
}

group = 'cheeseSand'
version = '1.0-SNAPSHOT'

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
configurations {
    jar.archiveName = name + '-_v1_19-' + version + '.jar'
}
jar {
    destinationDirectory.set(file("$rootDir/jars"))
}

build {
    sourceCompatibility = 17
    targetCompatibility = 17
}

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'purpur'
        url = 'https://repo.purpurmc.org/snapshots' }

    maven {
        url "http://dpp.dpnw.site:8081/repository/maven-public/"
        allowInsecureProtocol = true
    }

}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'
    compileOnly 'com.darksoldier1404.dppc:DPP-Core:1.19-SNAPSHOT'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
